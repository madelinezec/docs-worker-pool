GIT_BRANCH=$(shell git rev-parse --abbrev-ref HEAD)
ifeq ($(STAGING_USERNAME),)
	USER=$(shell whoami)
else
	USER=$(STAGING_USERNAME)
endif

STAGING_URL="https://docs-atlas-staging.mongodb.com"
STAGING_BUCKET=docs-atlas-staging

ifeq ($(SNOOTY_INTEGRATION),false)
  PRODUCTION_URL="https://docs.atlas.mongodb.com"
  PRODUCTION_BUCKET=docs-atlas-prod;
else
  PRODUCTION_URL="docs-mongodbcom-integration.corp.mongodb.com"
  PRODUCTION_BUCKET=docs-node-integration
endif

PREFIX=cloud-docs
PROJECT=cloud-docs
MUT_PREFIX ?= $(PROJECT)
REPO_DIR=$(shell pwd)


SNOOTY_DB_USR = $(shell printenv MONGO_ATLAS_USERNAME)
SNOOTY_DB_PWD = $(shell printenv MONGO_ATLAS_PASSWORD)

.PHONY: help stage fake-deploy deploy publish deploy-search-index remote-includes next-gen-html

help:
	@echo 'Targets'
	@echo '  help         - Show this help message'
	@echo '  html         - Builds the html files.  Need if staging.'
	@echo '  stage        - Host online for review'
	@echo '  fake-deploy  - Create a fake deployment in the staging bucket'
	@echo '  deploy       - Deploy to the production bucket'
	@echo ''
	@echo 'Variables'
	@echo '  ARGS         - Arguments to pass to mut-publish'

next-gen-html:
	# snooty parse and then build-front-end
	@echo ${SNOOTY_DB_PWD} | snooty build "${REPO_DIR}" "mongodb+srv://${SNOOTY_DB_USR}:@cluster0-ylwlz.mongodb.net/snooty?retryWrites=true"; \
	if [ $$? -eq 1 ]; then \
		exit 1; \
	else \
		exit 0; \
	fi
	rsync -az --exclude '.git' ${REPO_DIR}/../../snooty ${REPO_DIR}; 
	cp ${REPO_DIR}/.env.production ${REPO_DIR}/snooty; 
	cd snooty; \
	echo "GATSBY_SITE=${PROJECT}" >> .env.production; \
	npm run build; \
	cp -r "${REPO_DIR}/snooty/public" ${REPO_DIR};
  
next-gen-stage: ## Host online for review
	mut-publish public ${STAGING_BUCKET} --prefix="${MUT_PREFIX}" --stage ${ARGS};
	echo "Hosted at ${STAGING_URL}/${MUT_PREFIX}/${USER}/${GIT_BRANCH}/";

next-gen-deploy:
	if [ ${GIT_BRANCH} = master ]; then mut-redirects config/redirects -o public/.htaccess; fi	
	@yes | mut-publish public ${PRODUCTION_BUCKET} --prefix="${MUT_PREFIX}" --deploy --deployed-url-prefix=https://docs.mongodb.com --json --all-subdirectories ${ARGS};
	@echo "Hosted at ${PRODUCTION_URL}/${MUT_PREFIX}/index.html";
	$(MAKE) next-gen-deploy-search-index

## Update the search index for this branch
next-gen-deploy-search-index:
	@echo "Building search index"
	mut-index upload public -o ${MANIFEST_PREFIX}.json -u ${PRODUCTION_URL}/${MUT_PREFIX} -s ${GLOBAL_SEARCH_FLAG}

get-build-dependencies: 
	@curl https://raw.githubusercontent.com/mongodb/docs-worker-pool/meta/publishedbranches/cloud-docs.yaml > ${REPO_DIR}/published-branches.yaml
