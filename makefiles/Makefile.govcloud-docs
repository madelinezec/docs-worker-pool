GIT_BRANCH=$(shell git rev-parse --abbrev-ref HEAD)
USER=$(shell whoami)

STAGING_URL="https://docs-mongodborg-staging.corp.mongodb.com"
STAGING_BUCKET=docs-mongodb-org-staging

ifeq ($(SNOOTY_INTEGRATION),false)
  PRODUCTION_URL="https://docs.mongodb.com"
  PRODUCTION_BUCKET=docs-govcloud-prod
else
  PRODUCTION_URL="https://docs-mongodbcom-integration.corp.mongodb.com"
  PRODUCTION_BUCKET=docs-govcloud-integration
endif

COMMIT_HASH=$(shell git rev-parse --short HEAD)
PREFIX=govcloud
PROJECT=govcloud
MUT_PREFIX ?= $(PROJECT)
REPO_DIR=$(shell pwd)

SNOOTY_DB_USR = $(shell printenv MONGO_ATLAS_USERNAME)
SNOOTY_DB_PWD = $(shell printenv MONGO_ATLAS_PASSWORD)

include ~/shared.mk

.PHONY: help stage fake-deploy deploy deploy-search-index publish remote-includes api-docs



get-build-dependencies: 
	@curl https://raw.githubusercontent.com/mongodb/docs-worker-pool/meta/publishedbranches/govcloud-docs.yaml > ${REPO_DIR}/published-branches.yaml

next-gen-html:
	# snooty parse and then build-front-end
	@echo ${SNOOTY_DB_PWD} | snooty build "${REPO_DIR}" "mongodb+srv://${SNOOTY_DB_USR}:@cluster0-ylwlz.mongodb.net/snooty?retryWrites=true" --commit "${COMMIT_HASH}"; \
	if [ $$? -eq 1 ]; then \
		exit 1; \
	else \
		exit 0; \
	fi
	rsync -az --exclude '.git' "${REPO_DIR}/../../snooty" "${REPO_DIR}"
	cp ${REPO_DIR}/.env.production ${REPO_DIR}/snooty;
	cd snooty; \
	echo "GATSBY_SITE=${PROJECT}" >> .env.production; \
	echo "COMMIT_HASH=${COMMIT_HASH}" >> .env.production; \
	npm run build; \
	cp -r "${REPO_DIR}/snooty/public" ${REPO_DIR};

html: ## Builds this branch's HTML under build/<branch>/html
	giza make html

next-gen-deploy-search-index: ## Update the search index for this branch
	@echo "Building search index"
	mut-index upload build/public -o ${PROJECT}-${GIT_BRANCH}.json -u ${PRODUCTION_URL}/${PREFIX} -g -s --exclude build/public/sdk/iOS

